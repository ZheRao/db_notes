



Version Control Basics


- version control systems
    -- centralized 
        --- one server repository, many clients machines can pull the code from the server to work on a local copy
        --- the server holds the full history of changes
        --- clients need to push the changed code to the central server

    -- distributed 
        --- different is every client is a server
        --- every time a client pull the code, they will have the entire history of changes on their local system

    -- advantage to centralized vs system 
        --- easier to learn
        --- more access control to users

    -- disadvantage to centralized vs system
        --- slower






Command Line


- common commands
    -- cd - change directory
        --- cd ~/Desktop
        --- cd .. -----> move out of current directory

    -- touch - make a new file of any type specified
        --- touch example.txt

    -- mkdir - make a new folder
        --- mkdir new_folder
    
    -- code - open the file in vs code
        --- code example.js

    -- history - view most recently typed commands

    -- clear - clear the view of the terminal


- Unix commands
    -- man - manual, gives detailed mannual of instructions for certain commands
        --- man ls
    
    -- ls - show contents of the current directory
        --- ls -l: list the files out in list order and shows the read and write permissions
        --- ls -a: list all files including the hidden ones
    
    -- pwd - print working directory shows the full path of the current working directory

    -- cp - copies files or folders from one destination to another

    -- mv - moves files from one directory to another
        --- mv folder destination_path

    -- less - a terminal pager program used to view the contents of a text file one screen at a time

    -- cat - returns the content of the file
        --- cat file1.txt
    
    -- wc - word count
        --- wc file1.txt -w, -w flag tells the wc command to return the word count


- pipes - allows passing the output from one command as the input to another
    -- suppose there are 2 files inside the current directory
    -- ls | wc -w ----> returns 2
    -- cat file1.txt file2.txt | wc -w -----> returns the worc counts for file1.txt and file2.txt combined







Redirection


- default
    -- 0 - stdin
    -- 1 - stdout
    -- 2 - stderr


- standard input
    -- cat > input.txt -------> take user inputs and store it in a file
        --- Ctrl + D when finish typing
    -- cat < input.txt ----> output the file

- standard output
    -- ls -l > output.txt  -------> send the output to output.txt file
        --- system will create output.txt if it doesn't exist 

- standard error
    -- ls -l /bin/path_dont_exist > output.txt -----> no action towards output.txt if there's an error, and print out the error
    -- ls -l /bin/path_dont_exist 2> error.txt ----> send the error message to error.txt file
    -- ls -l /bin/path_dont_exist > error.txt 2>&1 ----> normal output to error.txt if no error, and send error message to error.txt if there's error


- grep - global expression print, used for searching across files and folders as well as the content of the files
    -- grep Sam name.txt ---> returns a list of names that contain Sam (case sensitive)
    -- grep -i Sam name.txt ----> case insensitive
    -- grep -w Sam name.txt ----> exact matches, ignore partial matches
    
    -- ls /bin | grep zip ----> list files that partially match 'zip'








Git and Github

- clone repository (with HTTPS)
    -- git clone https://github.com/......

- git commands
    -- git status -----> displays changes and what branch currently on

    -- git add file_name.txt ------> start to track / stage the file
        --- git restore --staged file_name.txt ----> untrack the file

    -- git commit -m 'message' -------> commit the changes locally, not pushed to the server yet

    -- git init --initial-branch=main ----> initialize a local repository unconnected to the central repository server
        --- git remote will be empty since no connection set 

    -- git remote add origin git@github.com:____________.git -------> create connection between local and remote repository
        --- git pull -----> pull all the changes from server
                ls ---> returns blank because a branch hasn't been set up that matches with the server repository
                git checkout main ---> fix the issue
    
    -- git push -u origin main -----> push changes made to the main branch


- branching - exists in isolation, changes need to be merged back to the main branch
    -- git checkout -B feature/new_branch -----> create a new branch and move in this branch
    -- git branch ----> check on which branch
    -- git push -u origin feature/new_branch -----> push changes to the new branch on server
        --- on github, there would be a prompt for generating a pull request show up
        --- it compares the changes compared to the main branch
        --- once the pull request has been approved, the new branch can be merged into the main branch

    -- git checkout main -----> go back to the main branch
    -- git pull ----> receive the latest changes that were merged

    -- cat .git/HEAD ---> check pointing at which branch 
        --- cat .git/refs/heads/main ----> check the hash code
        --- the reference hash code will change after every commit


- git diff -----> compre the previous version of the file with the current one to find any difference in it
    -- git diff HEAD file_name

    -- git log --pretty=oneline ---> display a history of commits, returns with hash code for each change
    -- git diff hash_code1 hash_code2 ----> display all changes between the two change time stamp

    -- git diff main feature/new_branch ----> display all changes between main branch and new branch


- git blame <date> <file> ---> shows the changes made to a specific file and show the date, time and users who made the change
    -- git blame -L 5,15 file_name ----> shows the changes to specific lines
    -- git blame shows the changes, git log shows the details of the changes

